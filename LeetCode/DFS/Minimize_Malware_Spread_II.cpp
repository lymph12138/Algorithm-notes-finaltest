/*
928
*/
class Solution {
public:
    void dfs(int node,vector<bool>& vis,vector<vector<int>>& graph,int& temp,int flag){
        if(vis[node])   return;
        temp++;
        vis[node]=true;
        for(int i=0;i<graph.size();i++){
            if(i==flag || i==node) continue;
            if(graph[node][i]==0)   continue;
            dfs(i,vis,graph,temp,flag);
        }
    }
    int minMalwareSpread(vector<vector<int>>& graph, vector<int>& initial) {
        if(initial.size()==1)   return initial[0];
        sort(initial.begin(),initial.end());
        int n=graph.size();
        int m=0;
        vector<bool> vis(n,false);
        for(auto i:initial) dfs(i,vis,graph,m,n);
        //cout<<m<<endl;
        int tag=-1,ans=m;
        for(auto i:initial){
            vector<bool> tempvis(n,false);
            int temp=0;
            tempvis[i]=true;
            for(auto j:initial){
                if(i==j)    continue;
                dfs(j,tempvis,graph,temp,i);
            }
            if(temp==m-1 && tag==-1)    tag=i;
            if(temp<m-1){
                if(temp<ans)    tag=i;
                ans=min(ans,temp);
            };
            //cout<<temp<<endl;
        }
        return tag;
    }
};